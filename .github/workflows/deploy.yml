name: PR Preview Deployment

on:
  pull_request:
    branches:
      - master

jobs:
  deploy-preview:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          sudo apt update
          sudo apt install -y awscli

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Adjust for your project

      - name: Install Dependencies
        run: npm install --force # Adjust for your project

      - name: Build the Application
        run: npm run build  # Adjust based on your framework

      - name: Set Environment Variables
        run: |
          echo "BUCKET_NAME=${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_ENV
          echo "PR_PATH=previews/pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "DEPLOY_URL=https://preview.example.com/pr-${{ github.event.pull_request.number }}/index.html" >> $GITHUB_ENV

      - name: Upload Build to S3 Subfolder
        run: aws s3 sync ./build s3://$BUCKET_NAME/$PR_PATH --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/previews/pr-${{ github.event.pull_request.number }}/*"

      - name: Post Preview URL as PR Comment
        uses: mshick/add-pr-comment@v2
        with:
          message: "ðŸš€ **Preview Deployed:** [${{ env.DEPLOY_URL }}](${{ env.DEPLOY_URL }})"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event.action == 'closed'

    steps:
      - name: Set Cleanup Variables
        run: |
          echo "BUCKET_NAME=${{ secrets.AWS_S3_BUCKET }}" >> $GITHUB_ENV
          echo "PR_PATH=previews/pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Delete PR Deployment Files from S3
        run: aws s3 rm s3://$BUCKET_NAME/$PR_PATH --recursive

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/previews/pr-${{ github.event.pull_request.number }}/*"
